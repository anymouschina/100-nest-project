generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  address   String
  createdAt DateTime @default(now())

  orders Order[]

  cart Cart?

  CoupunOrderUser CoupunOrderUser[]
}

model Order {
  orderId   Int      @id @default(autoincrement())
  total     Float
  status    Status   @default(PENDING)
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [userId])
  userId Int

  items OrderItem[]

  CoupunOrderUser CoupunOrderUser[]
}

model OrderItem {
  orderItemId Int      @id @default(autoincrement())
  quantity    Int
  createdAt   DateTime @default(now())

  order   Order @relation(fields: [orderId], references: [orderId])
  orderId Int

  product   Product @relation(fields: [productId], references: [productId])
  productId Int
}

model Product {
  productId   Int      @id @default(autoincrement())
  name        String
  price       Float
  description String
  stock       Int
  createdAt   DateTime @default(now())

  cartItems CartItem[]

  orderItems OrderItem[]
}

model Cart {
  cartId    Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [userId])
  userId Int  @unique

  items CartItem[]
}

model CartItem {
  cartItemId Int      @id @default(autoincrement())
  quantity   Int
  createdAt  DateTime @default(now())

  cart   Cart @relation(fields: [cartId], references: [cartId])
  cartId Int

  product   Product @relation(fields: [productId], references: [productId])
  productId Int
}

model Coupon {
  couponId  Int      @id @default(autoincrement())
  code      String   @unique
  discount  Decimal
  expireAt  DateTime
  createdAt DateTime @default(now())

  CoupunOrderUser CoupunOrderUser[]
}

model CoupunOrderUser {
  user   User @relation(fields: [userId], references: [userId])
  userId Int

  order   Order @relation(fields: [orderId], references: [orderId])
  orderId Int

  coupun   Coupon @relation(fields: [couponId], references: [couponId])
  couponId Int

  @@id([userId, orderId, couponId])
}

enum Status {
  PENDING
  DELIVERED
}
